/* **********************************************
     Begin all.js
********************************************** *//*

	Thing still to do in tracking
	* Validate user entry
	* Edit of name in the description page, the list should update when the user navigates back to it
	* Barcode scanner
	* Switch between number and text for codes
	* Send details via Email
	* Item List will initialy be pulled from Local storage, so we need a way to refresh this list
	* Item Details will initialy be pulled from Local storage, so we need a way to refresh this list
	* Sync local storage with server
		* Prevent duplicates within the Local storage array
	* If duplicates are searched for highlight the one the user searched on, or re search
	* Sort local storage so the newest item is always shown first
	* Add to the list instead of creating a new list everytime
		* Abitlity to delete record from the details page
	* What to do when there is no local storage available

	* Slide animation
	* Templating solution via require.js
	* Local storage should be event driven from changes to the collection, I have not done this correctly
	* When you add the name on the tracking desc page, the event is lost to open the from again
	* Zobmies, Do I have any

*/nzp.Router=Backbone.Router.extend({routes:{"":"home","index.html":"home",locator:"locator",tracking:"trackingList","tracking/:id":"trackingDetails",contact:"contact",mappage:"mappage","locator/closest/:id":"locatorDetails","locator/closest/:id/:travel_mode":"directionsPage","locator/nearby/:place_type":"nearbyPage",locatorrefresh:"locatorRefresh"},initialize:function(e){},home:function(){nzp.$page.empty();nzp.headerTitle.set({title:"New Zealand Post"});nzp.$body.attr("id","home");var e=new nzp.Nav(navigationData),t=new nzp.HomePageView({model:e});nzp.appView.showView(t);var n=document.getElementById("home-page");n&&new FastClick(n);nzp.$loading.hide()},locator:function(){nzp.$page.empty();nzp.headerTitle.set({title:"Locator"});nzp.$body.attr("id","locator");getLocation(this.getLocation);this.previousPage="";var e=document.getElementById("locator-page");e&&new FastClick(e)},locatorRefresh:function(){nzp.refreshMe=!0;nzp.$loading.show();nzp.$page.empty();getLocation(this.getLocation);this.previousPage="";var e=document.getElementById("locator-page");e&&new FastClick(e)},getLocation:function(e){nzp.placesCollection.length==0&&nzp.$loading.show();nzp.placesCollection.lat=e.coords.latitude;nzp.placesCollection.lng=e.coords.longitude;nzp.placeListView=new nzp.LocatorPageView({collection:nzp.placesCollection});if(nzp.placesCollection.length==0||nzp.refreshMe==1)nzp.placesCollection.fetch({success:function(e,t){nzp.appView.showView(nzp.placeListView);nzp.appView.hideSpinner();nzp.refreshMe=!1}});else{nzp.appView.showView(nzp.placeListView);nzp.appView.hideSpinner()}},locatorDetails:function(e){nzp.$page.empty();nzp.headerTitle.set({title:"Details"});nzp.$body.attr("id","locator-details");if(nzp.placesCollection.length==0){var t=new nzp.Place({id:e}),n=new nzp.PlacesSingle({model:t});n.fetch({success:function(e,t){nzp.placesCollection.add(e.models[0]);nzp.router.placeDetails(e.models[0])},error:function(e,t){console.log("Not firing on error, must investigate");nzp.$page.html('<div class="msg page"><p>No place found.</p><p>Please check the URL is correct</p></div>')}},this)}else{var r=nzp.placesCollection.find(function(t){return t.get("id")==e});nzp.router.placeDetails(r)}this.previousPage="locator";var i=document.getElementById("locator-details-page");i&&new FastClick(i)},placeDetails:function(e){var t=(new nzp.LocatorDetailView({collection:e})).render();nzp.$page.append(t.el)},nearbyPage:function(e){var t=this;nzp.nearby_type=unescape(e);nzp.placesCollection.isEmpty()?getLocation(function(e){nzp.placesCollection.lat=e.coords.latitude;nzp.placesCollection.lng=e.coords.longitude;nzp.placesCollection.fetch({success:t.showNearby})}):this.showNearby(nzp.placesCollection)},showNearby:function(e){nzp.$page.empty();var t=new ShowMapAllView({collection:e});createTab=new nzp.TabCollection(AllMarkersTabsData);var n=new nzp.TabView({collection:createTab,el:'<ul id="posttype" class="tabbar tabbar-posttype grad-mask">',tabtype:"allmarkers"});nzp.$wrapper.append(n.render().el);t.render();var r=createTab.find(function(e){return e.get("title")==nzp.nearby_type});r.set("highlighted",!0);nzp.headerTitle.set({title:nzp.nearby_type});nzp.$body.attr("id","locator");nzp.router.previousPage="locator";var i=document.getElementById("posttype");i&&new FastClick(i)},directionsPage:function(e,t){var n;nzp.travel_mode=t;nzp.placesCollection&&(n=nzp.placesCollection.get(e));if(n==undefined){n=new nzp.Place({id:e});n.fetch({success:this.showPlace})}else this.showPlace(n)},showPlace:function(e){nzp.current_place=e;getLocation(function(t){nzp.$page.empty();nzp.headerTitle.set({title:nzp.tabTitle});nzp.$body.attr("id","locator");var n=new nzp.MapPageView({model:e});n.coords=t.coords;n.render();nzp.router.previousPage="locator";var r=new nzp.TabCollection(DirectionTabsData),i=new nzp.TabView({collection:r,el:'<ul id="mode" class="tabbar tabbar-mode grad-mask">',tabtype:"travelroute"});nzp.$wrapper.append(i.render().el);var s=r.find(function(e){return e.get("slug")==nzp.travel_mode});s.set("highlighted",!0);var o=document.getElementById("mode");o&&new FastClick(o)})},trackingList:function(){nzp.$page.empty();nzp.headerTitle.set({title:"Tracking"});nzp.$body.attr("id","tracking");var e=new nzp.TrackingForm,t=(new nzp.TrackingFormView({model:e,collection:nzp.trackingPageCollection,el:'<div id="tracking-page" class="page">'})).render();nzp.$page.html(t.el);nzp.trackingPageCollection.fetch({success:function(){if(nzp.trackingPageView==undefined){var e=new nzp.TrackingPage;nzp.trackingPageView=new TrackingPageView({model:e,collection:nzp.trackingPageCollection});nzp.$page.append(nzp.trackingPageView.render().el);nzp.trackingPageCollection.length>0&&nzp.trackingPageCollection.models[0].save({spinner:""})}}},this);this.previousPage="";var n=document.getElementById("tracking-page");n&&new FastClick(n)},trackingDetails:function(e){nzp.$page.empty();nzp.headerTitle.set({title:e});nzp.$body.attr("id","tracking");this.previousPage="tracking";nzp.trackingPageCollection.length==0&&nzp.trackingPageCollection.fetch();if(nzp.trackingPageCollection.length>0){model=nzp.trackingPageCollection.find(function(t){return t.get("track_code")==e});if(model){nzp.trackingDetailsForm=new nzp.TrackingDetailsForm({model:model});nzp.trackingDetails=new nzp.TrackingDetails({model:model});nzp.userName=new nzp.TrackingDetailsUserName({model:model});var t=$(nzp.userName.render().el).after(nzp.trackingDetails.render().el),n=$(nzp.trackingDetailsForm.render().el).after(t);nzp.$page.html(n)}else nzp.$page.html('<div class="msg page"><p>This record does not match the ones you have stored.</p><p>Please check the URL is correct</p></div>')}else nzp.$page.html('<div class="msg page"><p>You dont have any tracking items stored</p></div>')},contact:function(){nzp.$page.empty();var e=new nzp.ContactPageView({});nzp.$page.html(e.el);nzp.headerTitle.set({title:"Contact"});nzp.$body.attr("id","contact");this.previousPage="";var t=document.getElementById("contact-page");t&&new FastClick(t)}});